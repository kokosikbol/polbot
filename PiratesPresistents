[{"enabled":true,"running":false,"loop":{"min":3000,"max":5000},"name":"Drop Vials","code":"local vials = { \u0022empty potion flask\u0022, \u0022empty potion flask(1)\u0022, \u0022empty potion flask(2)\u0022}\nlocal containers = { MainBackpack, MiscBackpack } -- list of your backpacks with vials\nlocal dropPosition = getscreenfortile(point(0,0).X, point(0,0).Y)\nlocal dropBelowCap = 750\nlocal dropBelowMonsters = 2\n\nif not gettargeting() and isconnected() and getmainbattlelistmonsters().Count \u003C dropBelowMonsters and cap() \u003C dropBelowCap then\n for i=1, #containers do\n local backpack = getcontainer(containers[i])\n\n if backpack then\n for j=1, #vials do\n local vial = getitem(vials[j], backpack)\n\n if backpack.X \u003E 0 and backpack.Y \u003E 0 then\n if vial.X \u003E 0 and vial.Y \u003E 0 then\n wait(300, 600)\n ldrag(vial, dropPosition)\n wait(300, 600)\n end\n end\n\n end\n end\n\n end\nend"},{"enabled":true,"running":false,"loop":{"min":1000,"max":3000},"name":"Haste","code":"if not ispzone() and not ishasted() and cancast(\u0022Haste\u0022) and getwalking() then\n\tif getsectionname() == \u0022Hunt\u0022 then\n\t\tif getmainbattlelistmonsters().Count \u003C 1 then\n\t\t\tcasthotkey(\u0022Haste\u0022)\n\t\tend\n\telse\n\t\tcasthotkey(\u0022Haste\u0022)\n\tend\nend"},{"enabled":true,"running":false,"loop":{"min":40000,"max":60000},"name":"Eat Food","code":"if getwalking() and (EatFood and EatFood == true) then\n\tif countsupply(\u0022brown mushroom\u0022) \u003E 0 then\n\t\tcasthotkey(\u0022Brown Mushroom\u0022)\n\tend\nend"},{"enabled":true,"running":false,"loop":{"min":2000,"max":3000},"name":"Exeta Res","code":"local monsters = {\u0022Pirat Scoundrel\u0022, \u0022Pirat Bombardier\u0022}\n\nlocal function countBattleListMonsters(monsters)\n local battleList = getmainbattlelist()\n local counter = 0\n\n for i=1, #monsters do\n if gethpfromplayer(monsters[i], battleList) ~= -1 then\n counter = counter \u002B 1\n end\n end\n\n return counter\nend\n\nfunction castSpellIfMonsters(hotkey, distance, monstersCount, monsters)\n if countBattleListMonsters(monsters) \u003E= monstersCount then\n \tif creaturesaround(distance) \u003E= monstersCount then\n \t\tif mppc() \u003E 10 and cancast(hotkey) then\n \t\t\tcasthotkey(hotkey)\n \t\tend\n \tend\n end\nend\n\n\ncastSpellIfMonsters(\u0022Exeta Amp Res\u0022, 5, 1, monsters )\n\n"},{"enabled":true,"running":false,"loop":{"min":300,"max":500},"name":"Lure Monsters","code":"if getsectionname() ~= \u0022City\u0022 then\n\n\tlocal monsters = { \u0022Exotic Bat\u0022, \u0022Pirat Cutthroat\u0022, \u0022Pirat Bombardier\u0022, \u0022Pirat Scoundrel\u0022 }\n\tlocal battleList = getmainbattlelist()\n\n if getmainbattlelistmonsters().Count == 1 and gettargeting() then\n for i=1, #monsters do\n local hp = gethpfromplayer(monsters[i], battleList)\n if hp ~= -1 then\n\t\t\t\t\t local hpToSkip = math.random(35,40)\n if hp \u003E hpToSkip then\n\n wait(150,250)\n\t\t\t\t\t\t\t\n onlyTrapped()\n\t\t\t\t\t\t\tdisableTargeting()\n\t\t\t\t\t\t\t\n wait(150,250)\n sendkeyboard(\u0022{ESC}\u0022)\n wait(50,70)\n sendkeyboard(\u0022{ESC}\u0022)\n end\n end\n end\n\n\telseif getmainbattlelistmonsters().Count \u003E= tonumber(getLureCount()) then\n\t\tnotTrapped()\n\t\tenableTargeting()\n\n\telseif getmainbattlelistmonsters().Count == 0 then\n\t\tonlyTrapped()\n\t\tdisableTargeting()\n\tend\n\nelse\n\tonlyTrapped()\n\tenableTargeting()\nend\n"},{"enabled":true,"running":false,"loop":{"min":2000,"max":4000},"name":"Trapped","code":"if (istrapped() or movetries() \u003E 100) and getsectionname() ~= \u0022City\u0022 then\n\tif creaturesaround(2) \u003E 0 and not gettargeting() then\n\t\tlog(\u0022Trapped action triggered\u0022)\n\t\tenableTargeting()\n\t\tnotTrapped()\n\tend\nend"},{"enabled":true,"running":false,"loop":{"min":1000,"max":2000},"name":"Walking Method","code":"if getsectionname() == \u0022Hunt\u0022 or (getsectionname() == \u0022Leave\u0022 and posz() == 6) or (getsectionname() == \u0022GoHunt\u0022 and posy() \u003E 32800) then\n if getwalkingvalue(\u0022walking method\u0022) ~= \u0022Map Clicks\u0022 then\n setwalkingvalue(\u0022walking method\u0022, \u0022map clicks\u0022)\n end\nelse\n if getwalkingvalue(\u0022walking method\u0022) ~= \u0022Arrow Keys\u0022 then\n setwalkingvalue(\u0022walking method\u0022, \u0022arrow keys\u0022)\n end\nend\n\n"},{"enabled":true,"running":false,"loop":{"min":1000,"max":2000},"name":"Ring Equiper","code":"if Ring and (UseRings and UseRings == true) and getmainbattlelistmonsters().Count == 0 and countsupply(\u0022ring\u0022) \u003E 0 then\n \n if getsectionname() == \u0022Hunt\u0022 then\n \n if finditem(\u0022empty ring\u0022, getequipment()) then\n pausewalking(200,400)\n \tcasthotkey(\u0022Ring\u0022)\n end\n \n else\n \n if not finditem(\u0022empty ring\u0022, getequipment()) then\n pausewalking(200,400)\n casthotkey(\u0022Ring\u0022)\n end\n \n end\n\n\nend"},{"enabled":true,"running":false,"loop":{"min":1000,"max":2000},"name":"Force Healer \u0026 Looting","code":"if getlooting() == false then\n\tsetlooting(\u0022on\u0022)\nend\n\nif getspellhealer() == false then\n\tsetspellhealer(\u0022on\u0022)\nend\n\nif getpotionhealer() == false then\n setpotionhealer(\u0022on\u0022)\nend"},{"enabled":true,"running":false,"loop":{"min":100,"max":4000},"name":"Piramides","code":"local locations = {\n -- NORTH FROM BOAT\n\t{ y = 32869, fromX = 33081, toX = 33084, hotkey = \u0022{DOWN}\u0022 },\n \t{ x = 33085, fromY = 32852, toY = 32870, hotkey = \u0022{RIGHT}\u0022},\n \n -- 2x NORTH FROM BOAT\n\t{ y = 32846, fromX = 33079, toX = 33089, hotkey = \u0022{DOWN}\u0022 },\n \t{ x = 33089, fromY = 32836, toY = 32845, hotkey = \u0022{RIGHT}\u0022},\n\n -- NORTH EAST FROM BOAT\n { y = 32854, fromX = 33093, toX = 33100, hotkey = \u0022{UP}\u0022 },\n { x = 33093, fromY = 32855, toY = 32860, hotkey = \u0022{LEFT}\u0022 },\n\n -- WEST FROM DEPOT\n { y = 32847, fromX = 33097, toX = 33111, hotkey = \u0022{DOWN}\u0022 },\n { x = 33097, fromY = 32833, toY = 32846, hotkey = \u0022{LEFT}\u0022 },\n { x = 33111, fromY = 32833, toY = 32846, hotkey = \u0022{RIGHT}\u0022 },\n\n -- EAST FROM DEPOT\n { y = 32833, fromX = 33141, toX = 33161, hotkey = \u0022{UP}\u0022 },\n { x = 33141, fromY = 32834, toY = 32852, hotkey = \u0022{LEFT}\u0022 },\n\n -- DEPOT \n { y = 32836, fromX = 33119, toX = 33123, hotkey = \u0022{UP}\u0022 },\n { y = 32836, fromX = 33129, toX = 33134, hotkey = \u0022{UP}\u0022 },\n \n -- DEPOT \n { y = 32851, fromX = 33119, toX = 33123, hotkey = \u0022{DOWN}\u0022 },\n { y = 32851, fromX = 33129, toX = 33134, hotkey = \u0022{DOWN}\u0022 },\n \n -- DEPOT \n { x = 33119, fromY = 32837, toY = 32850, hotkey = \u0022{LEFT}\u0022 },\n { x = 33134, fromY = 32837, toY = 32850, hotkey = \u0022{RIGHT}\u0022 },\n\n -- NORTH WEST FROM DEPOT\n { y = 32826, fromX = 33112, toX = 33116, hotkey = \u0022{DOWN}\u0022 },\n { x = 33116, fromY = 32812, toY = 32825, hotkey = \u0022{RIGHT}\u0022 },\n\n -- SOUTH WEST FROM DEPOT\n { y = 32858, fromX = 33115, toX = 33121, hotkey = \u0022{UP}\u0022 },\n { x = 33115, fromY = 32859, toY = 32864, hotkey = \u0022{LEFT}\u0022 },\n}\n\nlocal function pressKeyboard(hotkey)\n wait(100,200)\n sendkeyboard(hotkey)\n wait(100,200)\nend\n\nlocal function isPosition(location)\n if location.x and location.x == posx() then\n return true\n end\n\n if location.y and location.y == posy() then\n return true\n end\n\n return false\nend\n\nif getwalking() and posz() == 6 then\n\n for i=1, #locations do\n local location = locations[i]\n\n if isPosition(location) then\n\n if location.fromX then\n if posx() \u003E= location.fromX and posx() \u003C= location.toX then\n pressKeyboard(location.hotkey)\n break\n end\n end\n\n if location.fromY then\n if posy() \u003E= location.fromY and posy() \u003C= location.toY then\n pressKeyboard(location.hotkey)\n break\n end\n end\n\n end\n\n end\nend"},{"enabled":true,"running":false,"loop":{"min":3000,"max":5000},"name":"UnderAnkBoat","code":"if posx() == 33095 and posy() == 32882 and posz() == 7 then\n\twait(300,500)\n\trclick(getscreenfortile(point(0,0).X, point(0,0).Y))\n\twait(300,500)\nend\n"}]
