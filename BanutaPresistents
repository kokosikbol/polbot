[{"name":"Drop Vials","code":"local vials = { \"empty potion flask\", \"empty potion flask(1)\", \"empty potion flask(2)\"}\nlocal containers = { MainBackpack, MiscBackpack } -- list of your backpacks with vials\nlocal dropPosition = getscreenfortile(point(0,0).X, point(0,0).Y)\nlocal dropBelowCap = 1200\nlocal dropBelowMonsters = 2\n\nif not gettargeting() and isfocused() and isconnected() and getmainbattlelistmonsters().Count < dropBelowMonsters and cap() < dropBelowCap then\n  for i=1, #containers do\n    local backpack = getcontainer(containers[i])\n\n    if backpack then\n      for j=1, #vials do\n        local vial = getitem(vials[j], backpack)\n\n        if backpack.X > 0 and backpack.Y > 0 then\n          if vial.X > 0 and vial.Y > 0 then\n            wait(300, 600)\n            ldrag(vial, dropPosition)\n            wait(300, 600)\n          end\n        end\n\n      end\n    end\n\n  end\nend","enabled":true,"running":false,"loop":{"min":3000,"max":5000}},{"name":"Haste","code":"if isfocused() and not ispzone() and not ishasted() and cancast(\"Haste\") and getwalking() then\n\tif posz() == 15 then\n\t\tif getmainbattlelistmonsters().Count < 2 then\n\t\t\tcasthotkey(\"Haste\")\n\t\tend\n\telse\n\t\tcasthotkey(\"Haste\")\n\tend\nend","enabled":true,"running":false,"loop":{"min":1000,"max":3000}},{"name":"Eat Food","code":"if isfocused() and getwalking()  and (EatFood and EatFood == true) then\n\tif countsupply(\"brown mushroom\") > 0 then\n\t\tcasthotkey(\"Brown Mushroom\")\n\tend\nend","enabled":true,"running":false,"loop":{"min":40000,"max":60000}},{"name":"Lure Monsters","code":"if huntingSection() then\n\nlocal monsters = { {\"Hydra\", 35}, {\"Medusa\", 20}, {\"Serpent Spawn\", 25} , {\"Souleater\", 75}, {\"Eternal Guardian\", 40}}\nlocal battleList = getmainbattlelist()\n\n  if getmainbattlelistmonsters().Count == 1 and gettargeting() then\n\n    for i=1, #monsters do\n      local hp = gethpfromplayer(monsters[i][1], battleList)\n      local hpToSkip = monsters[i][2]\n\n        if hp ~= -1 then\n            if hp > hpToSkip then\n\n              wait(150,250)\n\n              onlyTrapped()\n              disableTargeting()\n\n              wait(150,250)\n              sendkeyboard(\"{ESC}\")\n              wait(50,70)\n              sendkeyboard(\"{ESC}\")\n          end\n      end\n  end\n\nelseif getmainbattlelistmonsters().Count >= tonumber(getLureCount()) and posz() == 15 then\n\t\tnotTrapped()\n\t\tenableTargeting()\n\n\telseif getmainbattlelistmonsters().Count == 0  then\n\t\tonlyTrapped()\n\t\tdisableTargeting()\n\tend\n\nelse\n\tonlyTrapped()\n\tenableTargeting()\nend","enabled":true,"running":false,"loop":{"min":300,"max":500}},{"name":"Trapped","code":"if (istrapped() or movetries() > 100 or posx() == 0) and getsectionname() ~= \"City\" then\n\tif creaturesaround(2) > 0 and not gettargeting() then\n\t\tlog(\"Trapped action triggered\")\n\t\tenableTargeting()\n\t\tnotTrapped()\n\tend\nend","enabled":true,"running":false,"loop":{"min":4000,"max":8000}},{"name":"Walking Method","code":"if getsectionname() ~= \"City\" then\n    if getwalkingvalue(\"walking method\") ~= \"Map Clicks\" then\n        setwalkingvalue(\"walking method\", \"map clicks\")\n    end\nelse\n    if getwalkingvalue(\"walking method\") ~= \"Arrow Keys\" then\n        setwalkingvalue(\"walking method\", \"arrow keys\")\n    end\nend\n\n","enabled":true,"running":false,"loop":{"min":1000,"max":2000}},{"name":"Ring Equiper","code":"if Ring and (UseRings and UseRings == true) and getmainbattlelistmonsters().Count == 0 and countsupply(\"ring\") > 0 then\n    \n    if posz() == 15 then\n\n      if finditem(\"empty ring\", getequipment()) then\n        pausewalking(200,400)\n      \tcasthotkey(\"Ring\")\n      end\n\n    else\n\n      if not finditem(\"empty ring\", getequipment()) then\n        pausewalking(200,400)\n        casthotkey(\"Ring\")\n      end\n\n    end\n\n\nend","enabled":true,"running":false,"loop":{"min":1000,"max":2000}},{"name":"Force Healing & Looting","code":"if getlooting() == false then\n\tsetlooting(\"on\")\nend\n\nif getspellhealer() == false then\n\tsetspellhealer(\"on\")\nend\n\nif getpotionhealer() == false then\n  setpotionhealer(\"on\")\nend","enabled":true,"running":false,"loop":{"min":1000,"max":2000}},{"name":"Utito Tempo & Exeta Res","code":"local monsters = {\"Hydra\", \"Medusa\", \"Serpent Spawn\"}\n\nlocal function countBattleListMonsters(monsters)\n  local battleList = getmainbattlelist()\n  local counter = 0\n\n  for i=1, #monsters do\n    if gethpfromplayer(monsters[i], battleList) ~= -1 then\n        counter = counter + 1\n      end\n  end\n\n  return counter\nend\n\nfunction castSpellIfMonsters(hotkey, distance, monstersCount, monsters)\n  if countBattleListMonsters(monsters) >= monstersCount then\n  \tif creaturesaround(distance) >= monstersCount then\n  \t\tif mppc() > 5 and cancast(hotkey) then\n\t\t\tlog(\"Casting: \" .. hotkey)\n  \t\t\tcasthotkey(hotkey)\n  \t\tend\n  \tend\n  end\nend\n\nif huntingSection() then\n\n  if (not UseUtitoTempo and not isstrengthened()) or (isstrengthened()) or (castedUtitoTempo() and not isstrengthened())  then\n    castSpellIfMonsters(\"Exeta Res\", 2, 1, monsters )\n  end\n\n  if not isstrengthened() and not castedUtitoTempo() then\n    if mppc() > 70 and cancast(\"Utito Tempo\") and gettargeting() == true then\n      if creaturesaround(2) > 2 then\n    \tif not castedUtitoTempo() then\n    \t\tsetUtitoTempo(2)\n    \tend\n        log(\"Casting Utito Tempo\")\n        casthotkey(\"Utito Tempo\")\n      end\n    end\n  end\n\nend","enabled":true,"running":false,"loop":{"min":200,"max":400}},{"name":"ShortcutTunnel","code":"if posz() ~= 10 or not getwalking() or not isfocused() or getsectionname() ~= \"GoHunt\" then\n\treturn\nend\n\nif ProcessingTunnel ~= 0 then\n  log(\"Already processing tunnel\")\n  return\nend\n\nProcessingTunnel = 1\n\nlocal position = {x = 0, y = 0}\nlocal minWait = 50\nlocal maxWait = 150\nlocal samePositionCounter = 0\nlocal limit = 2\n\nlocal tunnelSteps = {\n  [1] = { {10, \"UP\"}},\n  [2] = { {50, \"RIGHT\"}},\n  [3] = { {50, \"RIGHT\"}},\n  [4] = { {40, \"UP\"}},\n  [5] = { {2, \"DOWN\"}, {1, \"LEFT\"}}\n}\n\nlocal function setPosition()\n  position.x = posx()\n  position.y = posy()\nend\n\nlocal function move(dir)\n  if posz() == 10 then\n\t -- log(\"Walk: \" .. dir)\n \t  wait(minWait,maxWait)\n  \tsendkeyboard(\"{\" .. dir .. \"}\")\n  \twait(minWait,maxWait)\n  else\n  \tlog(\"not 10 floor, not walking\")\n  end\nend\n\nlocal function updatePositionCounter()\n  if position.x == posx() and position.y == posy() and posx() ~= 0 and not moved() then\n    samePositionCounter = samePositionCounter + 1\n  else\n      samePositionCounter = 0\n  end\nend\n\n\nlocal function processStep(steps)\n  for i=1, #steps do\n    samePositionCounter = 0\n\n    setPosition()\n    for j=1, steps[i][1] do\n\n        if getmainbattlelistmonsters().Count > 0 then\n            notTrapped()\n            enableTargeting()\n            wait(1000,2000)\n        else\n\n        move(steps[i][2])\n        updatePositionCounter()\n        setPosition()\n\n\n        if samePositionCounter > 2 then\n          samePositionCounter = 0\n          break\n        end\n      end\n\n    end\n  end\nend\n\nfor k=1, #tunnelSteps do\n  log(\"Processing: \" .. k .. \" step.\")\n  processStep(tunnelSteps[k])\nend\n\nlog(\"Completed\")\nProcessingTunnel = 0","enabled":true,"running":false,"loop":{"min":1000,"max":1000}},{"name":"Anti Paralize","code":"if getwalking() and isparalyzed() then\n\tif mppc() > 3 and hppc() < 80 and cancast(\"Exura Med Ico\") then\n\t\tcasthotkey(\"Exura Med Ico\")\n\telse\n\t\tif mppc() > 1 and cancast(\"Exura Ico\") then\n\t\t\tcasthotkey(\"Exura Ico\")\n\t\tend\n\tend\nend","enabled":true,"running":false,"loop":{"min":200,"max":400}},{"name":"Exori Mas","code":"if not ispzone() and creaturesaround(4) > 2 and getmainbattlelistmonsters().Count > 2 and posz() < 11 then\n\tif mppc() > 5 and cancast(\"Exori Mas\") then\n\t\tcasthotkey(\"Exori Mas\")\n\tend\nend","enabled":true,"running":false,"loop":{"min":200,"max":500}},{"name":"Garlic Neklace Equiper","code":"if (UseGarlicNecklaces and UseGarlicNecklaces == true) and countsupply(\"garlic necklace\") > 0 then\n    \n    if posz() == 15 then\n\n      if finditem(\"empty amulet\", getequipment()) then\n\tlog(\"equip necklace\")\n        pausewalking(200,400)\n      \tcasthotkey(\"Garlic Necklace\")\n      end\n\n    else\n\n      if not finditem(\"empty amulet\", getequipment()) then\n\tlog(\"deequip necklace\")\n        pausewalking(200,400)\n        casthotkey(\"Garlic Necklace\")\n      end\n\n    end\n\n\nend\n","enabled":true,"running":false,"loop":{"min":1000,"max":2000}}]
